{"version":3,"sources":["utils/session.ts","Context.tsx","data.ts","utils/index.ts","components/Header.tsx","components/Modal.tsx","components/Intro.tsx","components/Loader.tsx","components/TimesEvents.tsx","components/App.tsx","reportWebVitals.js","index.tsx"],"names":["COOKIE_NAME","defaultSession","showIntro","getSession","session","value","JSON","parse","Cookie","get","Context","createContext","undefined","reducer","state","stateUpdate","sessionUpdate","newState","sessionState","set","stringify","domain","document","setSession","defaultState","day","intro","category","loading","ContextProvider","children","useReducer","dispatch","Provider","useAppContext","context","useContext","Error","data","_events","_categories","_loaded","_title","_intro","this","a","fetch","json","events","title","sort","b","start","reduce","agg","concat","includes","find","ev","Promise","resolve","reject","setTimeout","formatTime","h","amPm","minutes","hour","toString","padStart","toDateTime","time","hours","totalMinutes","getEvents","filter","map","event","index","arr","startTime","lengthInMinutes","end","minutesDifference","endSameAsNextStart","startSameAsPrevEnd","items","endTime","sameTime","top","height","AppHeader","dates","useRef","date","Date","months","weekDays","i","getMonth","getDate","getDay","month","dayOfMonth","dayOfWeek","weekDay","push","setDate","getDates","Button","stateKey","type","className","onClick","current","d","dateIndex","categories","Modal","onClose","viewBox","Intro","Loader","id","attributeName","attributeType","dur","from","to","repeatCount","TimesEvents","container","useState","nowDate","nowDateSet","now","num","place","getHours","getMinutes","totalMinutesNow","Math","round","pow","timePretty","getNow","lastTime","length","showNow","useEffect","interval","querySelector","offsetHeight","scroll","behavior","setInterval","clearInterval","ref","node","style","eventIndex","display","item","itemIndex","App","init","onLinkClick","preventDefault","href","target","window","open","getElementById","addEventListener","removeEventListener","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.78f2a1dd.chunk.js","sourcesContent":["import Cookie from 'js-cookie';\n\nexport interface SessionState {\n    showIntro: boolean;\n}\n\nconst COOKIE_NAME = 'skejul';\n\nexport const defaultSession: SessionState = {\n    showIntro: true,\n};\n\nexport const getSession = (): SessionState => {\n    let session = { ...defaultSession };\n    try {\n        const value = JSON.parse(Cookie.get(COOKIE_NAME) || '{}');\n        session = { ...defaultSession, ...value };\n    } catch {}\n    return session;\n};\n\nexport const setSession = (newState: Partial<SessionState>): SessionState => {\n    const sessionState = getSession();\n    const value = { ...sessionState, ...newState };\n    Cookie.set(COOKIE_NAME, JSON.stringify(value), {\n        domain: document.domain,\n    });\n    return value;\n};\n","import { createContext, useContext, useReducer } from 'react';\nimport { getSession, SessionState, setSession } from './utils/session';\n\nexport interface State {\n    day: number;\n    category: string;\n    intro: boolean;\n    loading: boolean;\n    showIntro: boolean;\n}\n\ntype Dispatch = (action: Partial<State>) => void;\n\nconst Context =\n    createContext<{ state: State; dispatch: Dispatch } | undefined>(undefined);\n\nfunction reducer(state: State, stateUpdate: Partial<State>) {\n    // session updates\n    {\n        let sessionUpdate: Partial<SessionState> = {};\n        if ('showIntro' in stateUpdate) {\n            sessionUpdate = {\n                ...(sessionUpdate || {}),\n                showIntro: stateUpdate.showIntro,\n            };\n        }\n        if (sessionUpdate) setSession(sessionUpdate);\n    }\n\n    return { ...state, ...stateUpdate };\n}\n\nexport const defaultState: State = {\n    day: 0,\n    intro: false,\n    category: '',\n    loading: true,\n    showIntro: true,\n};\n\nexport function ContextProvider({ children }: { children: JSX.Element }) {\n    const sessionState = getSession();\n    const [state, dispatch] = useReducer(reducer, {\n        ...defaultState,\n        ...sessionState,\n    });\n\n    return (\n        <Context.Provider value={{ state, dispatch }}>\n            {children}\n        </Context.Provider>\n    );\n}\n\nexport function useAppContext() {\n    const context = useContext(Context);\n    if (context === undefined) {\n        throw new Error('use must be used within a Provider');\n    }\n    return context;\n}\n","import { defaultState, State } from './Context';\n\ninterface AppEvent {\n    start: number;\n    end: number;\n    items: string[];\n    day: number;\n    category: string;\n}\n\nclass Data {\n    private _events = [] as AppEvent[];\n    private _categories = [] as string[];\n    private _loaded = false;\n    private _title = 'Scheduler';\n    private _intro =\n        'This app lets you easily view schedules so you can easily find which event occurs on each day.';\n\n    get events() {\n        return this._events;\n    }\n    get categories() {\n        return this._categories;\n    }\n    get title() {\n        return this._title;\n    }\n    get intro() {\n        return this._intro;\n    }\n\n    async init(dispatch: (action: Partial<State>) => void) {\n        if (this._loaded) return;\n\n        dispatch({ loading: true });\n\n        try {\n            const {\n                events,\n                title,\n                intro,\n            }: { events: AppEvent[]; title: string; intro: string } = await (\n                await fetch('/data.json')\n            ).json();\n\n            this._title = title;\n            this._intro = intro;\n\n            this._events = events.sort((a, b) => {\n                return a.start > b.start ? 1 : -1;\n            });\n\n            this._categories = this._events\n                .reduce(\n                    (agg, { category }) =>\n                        agg.concat(agg.includes(category) ? [] : [category]),\n                    [] as string[]\n                )\n                .sort();\n\n            const day = events.find((ev) => ev.day === defaultState.day)\n                ? defaultState.day\n                : events[0].day;\n            const category = this._categories[1];\n\n            return new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this._loaded = true;\n                    dispatch({ loading: false, day, category });\n                    resolve(true);\n                }, 750);\n            });\n        } catch (e) {}\n\n        return false;\n    }\n}\n\nconst data = new Data();\n\nexport default data;\n","import { State } from '../Context';\nimport data from '../data';\n\nexport function getDates() {\n    let date = new Date();\n\n    const months = [\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December',\n    ];\n\n    const weekDays = [\n        'Sunday',\n        'Monday',\n        'Tuesday',\n        'Wednesday',\n        'Thursday',\n        'Friday',\n        'Saturday',\n    ];\n\n    const dates: {\n        month: string;\n        dayOfMonth: Number;\n        weekDay: string;\n        dayOfWeek: number;\n    }[] = [];\n\n    for (let i = 1; i < 8; i++) {\n        const [month, dayOfMonth, dayOfWeek] = [\n            date.getMonth(),\n            date.getDate(),\n            date.getDay(),\n        ];\n\n        let weekDay = weekDays[dayOfWeek];\n\n        if (i === 1) weekDay = 'Today';\n        if (i === 2) weekDay = 'Tomorrow';\n\n        dates.push({\n            month: months[month],\n            dayOfMonth,\n            weekDay,\n            dayOfWeek,\n        });\n        date.setDate(date.getDate() + 1);\n    }\n\n    return dates;\n}\n\nexport const formatTime = (h: number): string => {\n    if (h % 100 === 60) {\n        h += 40;\n    }\n    const amPm = h >= 1200 ? 'pm' : 'am';\n    const minutes = h % 100;\n    let hour = (h - minutes) / 100;\n    hour = hour > 12 ? hour - 12 : hour;\n\n    return `${hour}:${minutes.toString().padStart(2, '0')} ${amPm}`;\n};\n\nexport function getTimes() {\n    const times = [];\n    for (let h = 600; h < 2015; h += 15) {\n        if (h % 100 === 60) {\n            h += 40;\n        }\n        const amPm = h >= 1200 ? 'pm' : 'am';\n        const minutes = h % 100;\n        let hour = (h - minutes) / 100;\n        hour = hour > 12 ? hour - 12 : hour;\n\n        times.push({\n            h,\n            minutes,\n            title: `${hour}:${minutes.toString().padStart(2, '0')} ${amPm}`,\n        });\n    }\n    return times;\n}\n\nexport const toDateTime = (\n    time: number\n): { minutes: number; hours: number; totalMinutes: number } => {\n    const minutes = time % 100;\n    const hours = time ? (time - minutes) / 100 : 0;\n    const totalMinutes = hours * 60 + minutes;\n    return { minutes, hours, totalMinutes };\n};\n\nexport const minutesDifference = (start: number, end: number) => {\n    const startTime = toDateTime(start);\n    const endTime = toDateTime(end);\n    return endTime.totalMinutes - startTime.totalMinutes;\n};\n\nexport const round = (num: number, place: number) => {\n    return Math.round(num * Math.pow(10, place)) / 100;\n};\n\nexport const nowOffset = () => {\n    const start = toDateTime(600);\n    const now = toDateTime(\n        new Date().getHours() * 100 + new Date().getMinutes()\n    );\n    const totalMinutesNow = now.totalMinutes - start.totalMinutes;\n    return totalMinutesNow;\n};\n\nexport const getNow = (nowDate: Date) => {\n    const time = nowDate.getHours() * 100 + nowDate.getMinutes();\n    const now = toDateTime(time);\n    const start = toDateTime(600);\n    const totalMinutesNow = now.totalMinutes - start.totalMinutes;\n\n    return {\n        top: round(totalMinutesNow / 15, 2),\n        time,\n        timePretty: formatTime(time),\n    };\n};\n\nexport const getEvents = (state: State) => {\n    return data.events\n        .filter((ev) => ev.category === state.category && ev.day === state.day)\n        .map((event, index, arr) => {\n            const startTime = toDateTime(event.start - 600);\n            const lengthInMinutes = minutesDifference(event.start, event.end);\n            const endSameAsNextStart = event.end === arr[index + 1]?.start;\n            const startSameAsPrevEnd = event.start === arr[index - 1]?.end;\n            return {\n                ...event,\n                items: event.items,\n                lengthInMinutes,\n                startTime: formatTime(event.start),\n                endTime: endSameAsNextStart ? '' : formatTime(event.end),\n                sameTime: startSameAsPrevEnd,\n                top: (startTime.hours * 60 + startTime.minutes) / 15 + 'em',\n                height: lengthInMinutes / 15 - 0.1 + 'em',\n            };\n        });\n};\n\nexport function getUniqueValues<T>(arr: T[]): T[] {\n    return arr.filter(\n        (value: T, index: number, self: T[]) => self.indexOf(value) === index\n    );\n}\n","import { useRef } from 'react';\nimport { useAppContext, State } from '../Context';\nimport data from '../data';\nimport { getDates } from '../utils';\n\nexport default function AppHeader() {\n    const dates = useRef(getDates());\n\n    const { dispatch, state } = useAppContext();\n\n    function Button({\n        children,\n        stateKey,\n        value,\n    }: {\n        children: React.ReactNode;\n        stateKey: keyof State;\n        value: any;\n    }) {\n        return (\n            <button\n                type=\"button\"\n                className={state[stateKey] === value ? 'selected' : ''}\n                onClick={() => dispatch({ [stateKey]: value })}\n            >\n                {children}\n            </button>\n        );\n    }\n\n    return (\n        <header className=\"app-header\">\n            <nav className=\"days\">\n                <ul>\n                    {dates.current.map((d, dateIndex) => (\n                        <li key={dateIndex}>\n                            <Button stateKey=\"day\" value={d.dayOfWeek}>\n                                <>\n                                    <div className=\"day-week\">{d.weekDay}</div>\n                                    <div className=\"day-month\">\n                                        {d.dayOfMonth}\n                                    </div>\n                                    <div className=\"month\">{d.month}</div>\n                                </>\n                            </Button>\n                        </li>\n                    ))}\n                </ul>\n            </nav>\n            <nav className=\"categories\">\n                <ul>\n                    {data.categories.map((category, index) => (\n                        <li key={index}>\n                            <Button stateKey=\"category\" value={category}>\n                                {category}\n                            </Button>\n                        </li>\n                    ))}\n                </ul>\n            </nav>\n        </header>\n    );\n}\n","function Modal({\n    children,\n    onClose,\n    title,\n}: {\n    onClose: () => void;\n    children: JSX.Element;\n    title: string;\n}) {\n    return (\n        <div className=\"modal\">\n            <div className=\"backdrop\"></div>\n            <div className=\"dialog\">\n                <div className=\"title\">\n                    <h2>{title}</h2>\n                    <button type=\"button\" onClick={onClose}>\n                        <svg viewBox=\"0 0 24 24\">\n                            <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n                        </svg>\n                    </button>\n                </div>\n                <div className=\"body\">{children}</div>\n            </div>\n        </div>\n    );\n}\n\nexport default Modal;\n","import ReactMarkdown from 'react-markdown';\nimport { useAppContext } from '../Context';\nimport data from '../data';\nimport Modal from './Modal';\n\nfunction Intro() {\n    const { dispatch } = useAppContext();\n\n    return (\n        <Modal\n            title={data.title}\n            onClose={() => dispatch({ showIntro: false })}\n        >\n            <ReactMarkdown>{data.intro}</ReactMarkdown>\n        </Modal>\n    );\n}\n\nexport default Intro;\n","function Loader() {\n    return (\n        <div id=\"loader\">\n            <h2>Loading...</h2>\n            <svg viewBox=\"0 0 100 100\">\n                <path d=\"M73,50c0-12.7-10.3-23-23-23S27,37.3,27,50 M30.9,50c0-10.5,8.5-19.1,19.1-19.1S69.1,39.5,69.1,50\">\n                    <animateTransform\n                        attributeName=\"transform\"\n                        attributeType=\"XML\"\n                        type=\"rotate\"\n                        dur=\"1s\"\n                        from=\"0 50 50\"\n                        to=\"360 50 50\"\n                        repeatCount=\"indefinite\"\n                    />\n                </path>\n            </svg>\n        </div>\n    );\n}\n\nexport default Loader;\n","import { getEvents, getNow } from '../utils';\nimport { useEffect, useState, useRef } from 'react';\nimport { useAppContext } from '../Context';\n\nfunction TimesEvents() {\n    const { state } = useAppContext();\n\n    const events = getEvents(state);\n\n    const container = useRef<HTMLDivElement>();\n    const refCallback = (node: HTMLDivElement) => (container.current = node);\n\n    const [nowDate, nowDateSet] = useState(new Date());\n\n    const now = getNow(nowDate);\n\n    const lastTime = events.length ? events[events.length - 1].end : 0;\n\n    const showNow = now.time < lastTime;\n\n    useEffect(() => {\n        let interval: any;\n\n        if (showNow) {\n            // scroll window to now\n            {\n                let top = 0;\n                if (container.current && showNow) {\n                    const nowElement = container.current.querySelector(\n                        '.now'\n                    ) as HTMLElement;\n                    top = nowElement.offsetHeight * (now.top - 1);\n                }\n                container.current?.scroll({ top, behavior: 'smooth' });\n            }\n\n            // update now time\n            interval = setInterval(() => {\n                nowDateSet(new Date());\n            }, 60 * 1000); // every minute}\n        }\n\n        return () => interval && clearInterval(interval);\n    }, [lastTime, now.top, showNow]);\n\n    return (\n        <div className=\"times-events\" ref={refCallback}>\n            <div className=\"scroll-window\">\n                {showNow && (\n                    <div className=\"now\" style={{ top: now.top + 'em' }}>\n                        <div className=\"time\">{now.timePretty}</div>\n                    </div>\n                )}\n                {events.map((event, eventIndex) => (\n                    <div\n                        className=\"time-event\"\n                        key={eventIndex}\n                        style={{ top: event.top, height: event.height }}\n                    >\n                        <div className=\"time\">\n                            <div\n                                className={`start ${\n                                    event.sameTime ? 'share' : ''\n                                }`}\n                            >\n                                {event.startTime}\n                            </div>\n                            {event.endTime && (\n                                <div className=\"end\">{event.endTime}</div>\n                            )}\n                            <pre style={{ display: 'none' }}>\n                                {JSON.stringify(event, null, '\\t')}\n                            </pre>\n                        </div>\n                        <div className=\"event\">\n                            <div>\n                                {event.items.map((item, itemIndex) => (\n                                    <span key={itemIndex}>\n                                        {item}\n                                        <br />\n                                    </span>\n                                ))}\n                            </div>\n                        </div>\n                        <pre style={{ display: 'none' }}>\n                            {JSON.stringify(event, null, '\\t')}\n                        </pre>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default TimesEvents;\n","import { useEffect } from 'react';\nimport { useAppContext } from '../Context';\nimport data from '../data';\nimport Header from './Header';\nimport Intro from './Intro';\nimport Loader from './Loader';\nimport TimesEvents from './TimesEvents';\n\nfunction App() {\n    const { state, dispatch } = useAppContext();\n\n    useEffect(() => {\n        data.init(dispatch);\n\n        const onLinkClick = (event: MouseEvent) => {\n            event.preventDefault();\n            const href = (event.target as HTMLAnchorElement)?.href;\n            href && window.open(href, '_blank');\n        };\n\n        document.getElementById('root')?.addEventListener('click', onLinkClick);\n\n        return () => {\n            document\n                .getElementById('root')\n                ?.removeEventListener('click', onLinkClick);\n        };\n        // eslint-disable-next-line\n    }, []);\n\n    return state.loading ? (\n        <Loader />\n    ) : (\n        <>\n            {state.showIntro && <Intro />}\n            <Header />\n            <TimesEvents />\n            <div className=\"app-footer\">\n                <div />\n            </div>\n        </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\n// import { render } from 'react-snapshot';\nimport './index.scss';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { ContextProvider } from './Context';\n\nReactDOM.render(\n    <StrictMode>\n        <ContextProvider>\n            <App />\n        </ContextProvider>\n    </StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}